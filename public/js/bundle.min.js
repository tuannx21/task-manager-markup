!function i(c,l,d){function u(t,e){if(!l[t]){if(!c[t]){var o="function"==typeof require&&require;if(!e&&o)return o(t,!0);if(a)return a(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var r=l[t]={exports:{}};c[t][0].call(r.exports,function(e){return u(c[t][1][e]||e)},r,r.exports,i,c,l,d)}return l[t].exports}for(var a="function"==typeof require&&require,e=0;e<d.length;e++)u(d[e]);return u}({1:[function(e,t,o){"use strict";var l,n,d=e("./todo-function"),r="all",i=!0,c=document.querySelector("#input-new-todo"),u=document.querySelector("#complete-all-btn"),a=document.querySelector("#show-all-btn"),s=document.querySelector("#show-uncomplete-btn"),f=document.querySelector("#show-completed-btn"),m=document.querySelector("#todo-list"),p=document.querySelector("#all"),v=document.querySelector("#remaining"),y=function(c){l.map(function(e){var t=document.querySelector("#todo-template").content.cloneNode(!0),o=t.querySelector("li"),n=o.querySelector("#input-todo"),r=o.querySelector("#remove-todo-btn"),i=o.querySelector("#complete-todo-btn");switch(n.value=e.title,c){case"uncomplete":o.style.display=!0===e.completed?"none":"block";break;case"completed":o.style.display=!0===e.completed?"block":"none";break;default:o.style.display="block"}!0===e.completed&&(n.classList.add("has-completed"),i.classList.add("has-completed")),n.addEventListener("dblclick",function(){this.readOnly=!1}),n.addEventListener("blur",function(){n.readOnly=!0,l=""!==n.value?(0,d.updateTodo)(l,{id:e.id,title:n.value}):(0,d.removeTodo)(l,e),h(c)}),n.addEventListener("keypress",function(){13!==event.which&&13!==event.keyCode||(l=(0,d.updateTodo)(l,{id:e.id,title:n.value}),h())}),r.addEventListener("click",function(){l=(0,d.removeTodo)(l,e),h(c)}),i.addEventListener("click",function(){l=(0,d.toggleTodo)(l,e),h(c)}),m.appendChild(t)}),window.localStorage.setItem("todos",JSON.stringify(l))},h=function(){switch(function(){for(;m.firstChild;)m.removeChild(m.firstChild)}(),y(r),p.innerHTML=l.length,v.innerHTML=(0,d.remainingTodos)(l).length,r){case"completed":f.classList.add("active"),s.classList.remove("active"),a.classList.remove("active");break;case"uncomplete":f.classList.remove("active"),s.classList.add("active"),a.classList.remove("active");break;default:f.classList.remove("active"),s.classList.remove("active"),a.classList.add("active")}};n=JSON.parse(window.localStorage.getItem("todos")),l=null===n?[]:n,c.addEventListener("keypress",function(e){13!==e.which&&13!==e.keyCode||(l=(0,d.addTodo)(l,c.value),c.value="",i=!0,h())}),u.addEventListener("click",function(){!0===i?(0,d.completeAll)(l):(0,d.uncompleteAll)(l),i=!i,h()}),a.addEventListener("click",function(){r="all",h()}),s.addEventListener("click",function(){r="uncomplete",h()}),f.addEventListener("click",function(){r="completed",h()}),h()},{"./todo-function":2}],2:[function(e,t,o){"use strict";function i(e){return function(e){if(Array.isArray(e)){for(var t=0,o=new Array(e.length);t<e.length;t++)o[t]=e[t];return o}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(o,"__esModule",{value:!0}),o.remainingTodos=o.uncompleteAll=o.completeAll=o.toggleTodo=o.updateTodo=o.removeTodo=o.addTodo=void 0;o.addTodo=function(e,t){return""!==t?[].concat(i(e),[{id:e.reduce(function(e,t){return e.id>t.id?e.id:t.id},0)+1,title:t,completed:!1}]):(alert("u must type something first !!"),e)};o.removeTodo=function(e,t){var o=t.id;return e.filter(function(e){return e.id!==o})};o.updateTodo=function(e,t){var o=t.id,n=t.title,r=i(e);return r[r.findIndex(function(e){return e.id===o})].title=n,r};o.toggleTodo=function(e,t){var o=t.id,n=i(e),r=n.findIndex(function(e){return e.id===o});return n[r].completed=!n[r].completed,n};o.completeAll=function(e){return e.map(function(e){return e.completed=!0})};o.uncompleteAll=function(e){return e.map(function(e){return e.completed=!1})};o.remainingTodos=function(e){return e.filter(function(e){return!1===e.completed})}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
